---
import type { CollectionEntry } from 'astro:content';

import SkillBar from './skill-bar.astro';
import SkillTag from './skill-tag.astro';

interface Props {
  skillSets: { title?: string; withLevel?: boolean; skills: CollectionEntry<'skills'>[] }[];
}

const { skillSets } = Astro.props;

for (const skillSet of skillSets) {
  if (skillSet.withLevel) {
    const skillsWithoutLevel = skillSet.skills.filter((skill) => !skill.data.level);

    if (skillsWithoutLevel.length > 0) {
      skillSet.withLevel = false;
      console.warn(
        `Skills ${skillsWithoutLevel.map((skill) => `"${skill.slug}"`).join(', ')} in the skill set "${skillSet.title}" do not have a level. Disabling levels for this skill set.`,
      );
    }
  }
}
---

<div class="space-y-8">
  {
    skillSets.map((skillSet) => (
      <div class="mt-4">
        <h3 class="mb-2 text-xl font-bold text-slate-900">{skillSet.title}</h3>
        {skillSet.withLevel ? (
          <ul class="grid items-end gap-8">
            {skillSet.skills.map((skill) => (
              <SkillBar skill={skill} />
            ))}
          </ul>
        ) : (
          <ul class="flex flex-wrap gap-3">
            {skillSet.skills.map((skill) => (
              <SkillTag skill={skill} />
            ))}
          </ul>
        )}
      </div>
    ))
  }
</div>
<style>
  ul.grid {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }
</style>
