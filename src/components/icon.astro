---
import type { ComponentProps } from 'astro/types';
import { Icon as AstroIcon } from 'astro-icon/components';

import { getElementAttributes } from '@/utils/get-element-attributes';
import { removeTopElement } from '@/utils/remove-top-element';

interface Props extends ComponentProps<typeof AstroIcon> {
  name: string;
}

const { name, ...props } = Astro.props;

const result = await (async () => {
  if (!name.includes(':')) {
    return { name, props };
  }

  const [set, icon] = name.split(':');

  const svg = await fetch(`https://api.iconify.design/${set}/${icon}.svg`).then((res) => res.text());
  const args = getElementAttributes(svg);
  const content = removeTopElement(svg);

  return { props: { ...args, ...props }, content };
})();
---

{
  result.name ? (
    <AstroIcon name={result.name} {...props} />
  ) : (
    <svg {...result.props}>
      <Fragment set:html={result.content} />
    </svg>
  )
}
