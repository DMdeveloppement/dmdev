---
import type { CollectionEntry } from 'astro:content';

import { cn } from '@/utils/cn';
import { markdownToHtml } from '@/utils/markdown-to-html';
import { removeTopElement } from '@/utils/remove-top-element';

import Icon from './icon.astro';
import Linkable from './linkable.astro';
import Popover from './popover.astro';

interface Props {
  bookEntry: CollectionEntry<'favorites'>;
  icon?: string;
}

const {
  bookEntry: { data: book, body, render },
  icon,
} = Astro.props;

const Description = body.trim().length > 0 && (await render()).Content;
const subtitle = book.subtitle && removeTopElement(markdownToHtml(book.subtitle));
const rootClass = cn(
  'relative flex overflow-hidden rounded border border-slate-200 py-3 pl-4',
  Description ? 'pr-8' : 'pr-4',
);
---

<div class={rootClass}>
  {icon && <Icon name={icon} class="my-0.5 -ml-1 mr-1.5 size-4 shrink-0 text-slate-600 sm:size-5" />}
  <div class="flex w-full flex-col">
    <Linkable class="text-sm font-medium leading-snug text-slate-900 sm:text-base" href={book.url}>
      {book.title}
    </Linkable>
    {
      subtitle && (
        <div class="mt-0.5 text-sm text-slate-700 sm:text-base [&_a:not(:hover)]:no-underline" set:html={subtitle} />
      )
    }
    {
      Description && (
        <>
          <Popover>
            <button
              slot="trigger"
              class="absolute -right-px -top-px flex size-6 items-center justify-center rounded-bl bg-slate-200 transition-colors hover:bg-slate-300/80"
            >
              <Icon name="fa6-solid:info" class="size-3 text-slate-500" />
            </button>
            <div
              slot="popover"
              class="prose max-w-96 rounded-lg border border-slate-200 bg-white px-4 py-3 text-slate-700 shadow-md"
            >
              <Description />
            </div>
          </Popover>
        </>
      )
    }
  </div>
</div>
