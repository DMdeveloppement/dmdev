---
import type { CollectionEntry } from 'astro:content';

import { Icon } from '@/components/icon';
import Linkable from '@/components/linkable.astro';
import RenderedContent from '@/components/rendered-content.astro';
import { RelatedSkills } from '@/components/skills';
import { cn } from '@/utils/cn';
import { formatDate } from '@/utils/format-date';
import { markdownToHtml } from '@/utils/markdown-to-html';
import { removeTopElement } from '@/utils/remove-top-element';

interface Props {
  entry: CollectionEntry<'achievements'> | Promise<CollectionEntry<'achievements'>>;
}

const { entry } = Astro.props;
const { data: achievement, body, render } = await entry;

const date = achievement.date && formatDate(achievement.date, Astro);
---

<li class="grid gap-2">
  <div class="flex items-start gap-3">
    {
      achievement.icon && (
        <div class="hidden size-7 shrink-0 items-center justify-center rounded bg-color-bg-main sm:flex">
          <Icon name={achievement.icon} class="size-4 text-color-icon-dark" />
        </div>
      )
    }
    <div>
      <Linkable class="text-lg font-bold text-color-text-title sm:text-xl" href={achievement.url}>
        {achievement.name}
      </Linkable>
      {
        achievement.issuer && (
          <div
            class="text-sm font-medium text-color-text-title sm:text-base"
            set:html={removeTopElement(markdownToHtml(achievement.issuer))}
          />
        )
      }
      {date && <div class="text-sm font-normal text-color-text-primary sm:text-base">{date}</div>}
    </div>
  </div>
  <div class={cn(achievement.icon && 'lg:pl-10')}>
    {body.trim().length > 0 && <RenderedContent {render} />}
    {achievement.skills && <RelatedSkills class="mt-5" skillRefs={achievement.skills} />}
  </div>
</li>
