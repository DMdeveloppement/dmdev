---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import { intervalToDuration } from 'date-fns';

import { joinNonEmpty } from '@/utils/join-non-empty';
import { markdownToHtml } from '@/utils/markdown-to-html';

import Icon from './icon.astro';

interface Props {
  basicsEntry: CollectionEntry<'basics'>;
  socialEntries: CollectionEntry<'socials'>[];
}

const {
  basicsEntry: { data: basics, render: renderBasics },
  socialEntries,
} = Astro.props;

const { Content } = await renderBasics();

const details = [
  basics.birthdate && {
    label: 'Age',
    value: `${intervalToDuration({ start: basics.birthdate, end: new Date() }).years} years`,
  },
  (basics.city || basics.country) && { label: 'Location', value: joinNonEmpty([basics.city, basics.country], ', ') },
  basics.email && { label: 'Email', value: `[${basics.email}](mailto:${basics.email})` },
  basics.phone && { label: 'Phone', value: `[${basics.phone}](tel:${basics.phone})` },
  ...basics.details,
].filter(Boolean);
---

<section>
  <div class="flex flex-col items-center lg:flex-row lg:items-start">
    {
      basics.image && (
        <Image
          loading="eager"
          class="size-28 h-fit rounded-xl lg:size-20"
          src={basics.image}
          alt={basics.name}
          width={160}
          height={160}
        />
      )
    }
    <div class="mt-4 self-center text-center lg:ml-4 lg:mt-0 lg:space-y-0.5 lg:text-left">
      <h1 class="text-2xl font-black text-slate-900 sm:text-3xl">{basics.name}</h1>
      <h2 class="text-lg font-medium text-slate-700 sm:text-xl">{basics.label}</h2>
    </div>
    <div class="mt-3 flex flex-col items-center gap-4 lg:ml-auto lg:mt-0 lg:flex-row lg:items-start lg:gap-3 lg:pl-4">
      <ul class="flex w-full gap-3">
        {
          socialEntries.map(({ data: social }) => (
            <li class="flex-1">
              <a
                aria-label={social.label}
                href={social.url}
                class="flex h-8 min-w-8 items-center justify-center rounded bg-slate-200 transition-colors hover:bg-slate-300 lg:size-9"
                target="_blank"
                rel="noopener noreferrer"
              >
                <Icon class="size-4 text-slate-600" name={social.icon} aria-hidden />
              </a>
            </li>
          ))
        }
      </ul>
      {
        basics.resume && (
          <a
            href={basics.resume.url}
            class="flex h-9 items-center text-nowrap rounded-md bg-indigo-600 px-4 font-medium text-white transition-colors hover:bg-indigo-600/90"
            download={basics.resume.filename}
          >
            {basics.resume.label}
          </a>
        )
      }
    </div>
  </div>
  <div class="prose prose-sm prose-slate mt-8 max-w-none text-justify sm:prose-base lg:mt-4">
    <Content />
  </div>
  {
    details.length > 0 && (
      <dl class="mt-6 flex flex-wrap gap-x-12 gap-y-3 text-sm sm:gap-y-4 sm:text-base">
        {details.map((detail) => (
          <div data-definition class="flex w-fit flex-wrap gap-1">
            <dt class="font-semibold text-slate-900 after:content-[':']">{detail.label}</dt>
            <dd class="text-slate-700 hover:[&_a]:underline" set:html={markdownToHtml(detail.value)} />
          </div>
        ))}
      </dl>
    )
  }
</section>
