---
import type { CollectionEntry } from 'astro:content';

import DateRange from '@/components/date-range.astro';
import Details from '@/components/details.astro';
import Img from '@/components/img.astro';
import RenderedContent from '@/components/rendered-content.astro';
import { RelatedSkills } from '@/components/skills';
import { cn } from '@/utils/cn';
import { markdownToHtml } from '@/utils/markdown-to-html';
import { removeTopElement } from '@/utils/remove-top-element';

interface Props {
  entry: CollectionEntry<'education'> | CollectionEntry<'work'> | CollectionEntry<'projects'>;
}

const {
  entry: { data, body, render },
} = Astro.props;

const isEducation = 'institution' in data;
const isWork = 'organization' in data;

const { title, description, alt } = (() => {
  if (isEducation) {
    return { title: data.title, description: data.institution, alt: data.institution };
  } else if (isWork) {
    return { title: data.position, description: data.organization, alt: data.organization };
  } else {
    return { title: data.name, description: data.description, alt: data.name };
  }
})();
---

<li>
  <div class="mb-5 flex items-start gap-4">
    {
      data.image && (
        <Img
          class="hidden size-20 rounded object-contain sm:block"
          src={data.image}
          alt={alt}
          width={160}
          height={160}
        />
      )
    }
    <div>
      <h3 class="text-lg font-bold text-color-text-title sm:text-xl">
        {title}
      </h3>
      <div
        class="text-sm font-medium text-color-text-title sm:text-base"
        set:html={removeTopElement(markdownToHtml(description))}
      />
      <DateRange startDate={data.startDate} endDate={data.endDate} />
    </div>
  </div>
  <div class={cn(data.image && 'lg:pl-24')}>
    {data.details && <Details class="mb-3" details={data.details} />}
    {body.trim().length > 0 && <RenderedContent {render} />}
    {data.skills && <RelatedSkills class="mt-5" skillRefs={data.skills} />}
  </div>
</li>
